<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Mysql</title>
    <url>/2020/04/29/MySQL_1/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">哈哈哈你说是什么</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>MySQL-三</title>
    <url>/2020/04/30/MySQL_3/</url>
    <content><![CDATA[<h1 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h1><h1 id="一、多表查询"><a href="#一、多表查询" class="headerlink" title="一、多表查询"></a>一、多表查询</h1><h3 id="1-1-查询两张表"><a href="#1-1-查询两张表" class="headerlink" title="1.1 查询两张表"></a>1.1 查询两张表</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>功能</span><br><span class="line"> 		多张表查询时候,会出现笛卡尔积(交叉连接)的情况</span><br><span class="line"><span class="bullet">* </span>语法</span><br><span class="line"><span class="code">		select ... from 左表,右表</span></span><br></pre></td></tr></table></figure>

<h3 id="1-2-内连接"><a href="#1-2-内连接" class="headerlink" title="1.2 内连接"></a>1.2 内连接</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">功能 </span><br><span class="line">	拿作表的记录去匹配由标的记录,若符合条件显示(两张表的较计)</span><br><span class="line">语法</span><br><span class="line">	1)隐式内连接</span><br><span class="line">	<span class="keyword">select</span> * <span class="keyword">from</span> 左表名 别名,右表名 别名 <span class="keyword">where</span> 别名.id = 别名.id</span><br><span class="line">	<span class="number">2</span>)显示内连接</span><br><span class="line">	<span class="keyword">select</span> * <span class="keyword">from</span> 左表名 别名 [<span class="keyword">INNER</span>] <span class="keyword">join</span> 右表名 别名 <span class="keyword">ON</span> 别名.id = 别名.id</span><br></pre></td></tr></table></figure>

<h3 id="1-3-外连接"><a href="#1-3-外连接" class="headerlink" title="1.3 外连接"></a>1.3 外连接</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>左外连接[推荐]</span><br><span class="line"><span class="code">	功能</span></span><br><span class="line"><span class="code">		展示左表全部,在匹配右表记录,若田间符合现实,条件不符合现实null</span></span><br><span class="line"><span class="code">	语法</span></span><br><span class="line"><span class="code">		select... from 左表 left [outer] join 右表 on 连接条件;</span></span><br><span class="line"><span class="bullet">2. </span>右外连接[了解]</span><br><span class="line"><span class="code">	功能</span></span><br><span class="line"><span class="code">		现实右表全部,再去比配右表记录,若添加符合现实,条件不符合现实null</span></span><br><span class="line"><span class="code">	语法</span></span><br><span class="line"><span class="code">    	select ... from 左表 right [outer] join 右表 on 连接条件;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-4-子查询"><a href="#1-4-子查询" class="headerlink" title="1.4 子查询"></a>1.4 子查询</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>功能</span><br><span class="line"><span class="code">		一条select语法执行结果,作为另一条select语法的一部分时候</span></span><br><span class="line"><span class="bullet">2. </span>语法</span><br><span class="line"><span class="code">	1)查询结果单值</span></span><br><span class="line"><span class="code">		</span></span><br><span class="line"><span class="code">	2)拆线呢结果单值多值</span></span><br><span class="line"><span class="code">	</span></span><br><span class="line"><span class="code">	3)查询结果多值多列</span></span><br><span class="line"><span class="bullet">3. </span>规律</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>多表查询</tag>
      </tags>
  </entry>
  <entry>
    <title>Photo</title>
    <url>/2020/04/28/Photo/</url>
    <content><![CDATA[<p><img src="/2020/04/28/Photo/header-1588232948775.jpg" alt="图片"></p>
]]></content>
  </entry>
  <entry>
    <title>数据库事务</title>
    <url>/2020/05/05/MySql-affair/</url>
    <content><![CDATA[<h1 id="事务安全-TCL【理解】"><a href="#事务安全-TCL【理解】" class="headerlink" title="事务安全 TCL【理解】"></a>事务安全 TCL【理解】</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h2><p>如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</p>
<p>应用场景：用户转账</p>
<p><strong>准备数据</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 创建库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> day21_pro;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用库</span></span><br><span class="line"><span class="keyword">use</span> day21_pro;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建数据表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">account</span> (  <span class="comment">-- 账户表</span></span><br><span class="line">	<span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT,</span><br><span class="line">	<span class="string">`name`</span> <span class="built_in">VARCHAR</span>(<span class="number">32</span>),</span><br><span class="line">	money <span class="keyword">DOUBLE</span> </span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">account</span> (<span class="string">`name`</span>, money) <span class="keyword">VALUES</span> (<span class="string">'蝴蝶姐'</span>, <span class="number">1000</span>), (<span class="string">'罗志祥'</span>, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure>

<p><strong>模拟转账</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 扣钱（转出）</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span>  <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 机器故障了</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 加强（转入）</span></span><br><span class="line"><span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure>



<h2 id="2-操作事务【掌握】"><a href="#2-操作事务【掌握】" class="headerlink" title="2. 操作事务【掌握】"></a>2. 操作事务【掌握】</h2><h3 id="2-1-手动提交事务【手动操作mysql使用方案】"><a href="#2-1-手动提交事务【手动操作mysql使用方案】" class="headerlink" title="2.1 手动提交事务【手动操作mysql使用方案】"></a>2.1 手动提交事务【手动操作mysql使用方案】</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>开启事务</span><br><span class="line"><span class="code">		begin</span></span><br><span class="line"><span class="code">		</span></span><br><span class="line"><span class="bullet">2. </span>提交事务</span><br><span class="line"><span class="code">		commit</span></span><br><span class="line"><span class="code">		</span></span><br><span class="line"><span class="bullet">3. </span>回滚事务</span><br><span class="line"><span class="code">		rollback</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/05/MySql-affair/1588563849352.png" alt="1588563849352"> </p>
<p><strong>转账成功</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1. 开启事务</span></span><br><span class="line">	<span class="keyword">begin</span>;</span><br><span class="line"><span class="comment">-- 2. 扣钱</span></span><br><span class="line">	<span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span>  <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3. 加钱</span></span><br><span class="line">	<span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money + <span class="number">100</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 4. 提交事务</span></span><br><span class="line">	<span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure>





<p><strong>转账失败</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务</span></span><br><span class="line">	<span class="keyword">begin</span>;</span><br><span class="line"><span class="comment">-- 2.扣钱</span></span><br><span class="line">	<span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span>  <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.机器故障</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 4.回滚事务</span></span><br><span class="line">	<span class="keyword">rollback</span>;</span><br></pre></td></tr></table></figure>







<h3 id="2-2-自动提交事务【在JDBC将自动提交关闭】"><a href="#2-2-自动提交事务【在JDBC将自动提交关闭】" class="headerlink" title="2.2 自动提交事务【在JDBC将自动提交关闭】"></a>2.2 自动提交事务【在JDBC将自动提交关闭】</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">* </span>默认情况下，在MySQL中每一条DML（增删改）语句，就是一个独立的事务</span><br><span class="line"></span><br><span class="line"><span class="bullet">* </span>查看MySQL是否开启自动提交</span><br><span class="line"><span class="code">		show variables like 'autocommit';</span></span><br><span class="line"><span class="code">		</span></span><br><span class="line"><span class="bullet">* </span>临时关闭自动提交（手动）</span><br><span class="line"><span class="code">		set autocommit=off;</span></span><br></pre></td></tr></table></figure>



<p><strong>模拟转账</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.扣钱</span></span><br><span class="line">	<span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span>  <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line">	</span><br><span class="line"><span class="comment">-- 2.改为手动提交/回滚</span></span><br><span class="line">	<span class="keyword">commit</span> / <span class="keyword">rollback</span> ;</span><br></pre></td></tr></table></figure>







<h2 id="3-事务工作原理"><a href="#3-事务工作原理" class="headerlink" title="3. 事务工作原理"></a>3. 事务工作原理</h2><p><strong>注意：</strong></p>
<blockquote>
<p>在同一个事务中，出现bug（异常），必须执行rollback命令，不然会影响同一个事务中下一次提交</p>
</blockquote>
<p><img src="/2020/05/05/MySql-affair/1588565465224.png" alt="1588565465224"> </p>
<h2 id="4-保存（回滚）点【了解】"><a href="#4-保存（回滚）点【了解】" class="headerlink" title="4. 保存（回滚）点【了解】"></a>4. 保存（回滚）点【了解】</h2><p>​    当事务开启后，一部分sql执行成功，添加一个保存点，后续操作报错了，回滚到保存点，保证之前的操作可以成功提交</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>设置保存点</span><br><span class="line"><span class="code">		savepoint 保存点名;</span></span><br><span class="line"><span class="code">		</span></span><br><span class="line"><span class="bullet">2. </span>回滚到保存点</span><br><span class="line"><span class="code">		rollback to 保存点名;</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>场景：5个小姐姐，如果前二个成功扣款了设置保存点，保证前二位能够上门服务….</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- 1.开启事务</span></span><br><span class="line">	<span class="keyword">begin</span>;</span><br><span class="line"><span class="comment">-- 2.扣钱一次（凤姐）</span></span><br><span class="line">	<span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span>  <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 3.扣钱二次（芙蓉姐姐）</span></span><br><span class="line">	<span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span>  <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 4.设置一个保存点</span></span><br><span class="line">	<span class="keyword">savepoint</span> ol;</span><br><span class="line"><span class="comment">-- 5.扣钱三次（石榴姐）</span></span><br><span class="line">	<span class="keyword">UPDATE</span> <span class="keyword">account</span> <span class="keyword">SET</span> money = money <span class="number">-100</span> <span class="keyword">WHERE</span>  <span class="keyword">id</span> = <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 6.机器故障</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 7.回滚点保存点</span></span><br><span class="line">	<span class="keyword">rollback</span> <span class="keyword">to</span> ol;</span><br><span class="line"><span class="comment">-- 8.提交事务</span></span><br><span class="line">	<span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure>







<h2 id="5-事务特性-ACID【面试题】"><a href="#5-事务特性-ACID【面试题】" class="headerlink" title="5. 事务特性 ACID【面试题】"></a>5. 事务特性 ACID【面试题】</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>原子性：A atomicity</span><br><span class="line"><span class="code">		如果一个包含多个步骤的业务操作，被事务管理，那么这些操作要么同时成功，要么同时失败。</span></span><br><span class="line"><span class="code">		假如我们有个方法中对一个属性进行了N次的更新，但是执行到一半的时候有一个语句有问题出现了异常，这样就可能使得我们上面所说的操作后的点与我们预先的点不同，这不是我们想要的，所以原子性要求你这个方法要么全部执行成功，要么你就别执行。</span></span><br><span class="line"><span class="bullet">2. </span>一致性：C consistency</span><br><span class="line"><span class="code">		事务在执行前后，保证数据的一致性</span></span><br><span class="line"><span class="code">		原子性中规定方法中的操作都执行或者都不执行，但并没有说要所有操作一起执行（一起更新那就乱套了，要哪个结果？），所以操作的执行也是有先后顺序的，那我们要是在执行一半时查询了数据库，那我们会得到中间的更新的属性？答案是不会的，一致性规定事务提交前后只存在两个状态，提交前的状态和提交后的状态，绝对不会出现中间的状态。</span></span><br><span class="line"><span class="bullet">3. </span>隔离性：I isolation【重点】</span><br><span class="line"><span class="code">		多个事务之间，相互独立，互不干扰....</span></span><br><span class="line"><span class="code">		事务的隔离性基于原子性和一致性，每一个事务可以并发执行，但是他们互不干扰，但是也有可能不同的事务会操作同一个资源，这个时候为了保持隔离性会用到锁方案。</span></span><br><span class="line"><span class="bullet">4. </span>持久性：D durability</span><br><span class="line"><span class="code">		事务一旦成功提交，保存到磁盘文件，不可逆....</span></span><br><span class="line"><span class="code">		当一个事务提交了之后那这个数据库状态就发生了改变，哪怕是提交后刚写入一半数据到数据库中，数据库宕机(死机)了，那当你下次重启的时候数据库也会根据提交日志进行回滚，最终将全部的数据写入。</span></span><br></pre></td></tr></table></figure>



<h2 id="6-事务隔离性"><a href="#6-事务隔离性" class="headerlink" title="6. 事务隔离性"></a>6. 事务隔离性</h2><p>​    多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>脏读【必须要避免的....】</span><br><span class="line"><span class="code">		一个事务中，读取到另一个事务，未提交的数据</span></span><br><span class="line"><span class="code">		</span></span><br><span class="line"><span class="bullet">2. </span>不可重复读</span><br><span class="line"><span class="code">		一个事务中，二次读取的内容不一致，另外一个事务做了update操作</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>幻读</span><br><span class="line"><span class="code">		一个事务中，二次读取的数量不一致，另外一个事务做了insert、delete操作</span></span><br></pre></td></tr></table></figure>



<h3 id="6-1-MySQL数据库隔离级别"><a href="#6-1-MySQL数据库隔离级别" class="headerlink" title="6.1 MySQL数据库隔离级别"></a>6.1 MySQL数据库隔离级别</h3><table>
<thead>
<tr>
<th>级别</th>
<th>名字</th>
<th>隔离级别</th>
<th>脏读</th>
<th>不可重复读</th>
<th>幻读</th>
<th>数据库默认隔离级别</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>读未提交</td>
<td>read uncommitted</td>
<td>是</td>
<td>是</td>
<td>是</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>读已提交</td>
<td>read committed</td>
<td>否</td>
<td>是</td>
<td>是</td>
<td>Oracle和SQL Server</td>
</tr>
<tr>
<td>3</td>
<td>可重复读</td>
<td>repeatable read</td>
<td>否</td>
<td>否</td>
<td>是</td>
<td>MySQL</td>
</tr>
<tr>
<td>4</td>
<td>串行化</td>
<td>serializable</td>
<td>否</td>
<td>否</td>
<td>否</td>
<td></td>
</tr>
</tbody></table>
<p>性能角度：1&gt;2&gt;3&gt;4</p>
<p>安全角度：4&gt;3&gt;2&gt;1</p>
<p>综合考虑：2 or 3</p>
<h3 id="6-2-演示隔离级别产生的问题【课上听一听】"><a href="#6-2-演示隔离级别产生的问题【课上听一听】" class="headerlink" title="6.2 演示隔离级别产生的问题【课上听一听】"></a>6.2 演示隔离级别产生的问题【课上听一听】</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>查看当前数据库隔离级别</span><br><span class="line"><span class="code">		show variables like '%isolation%';</span></span><br><span class="line"><span class="code">		</span></span><br><span class="line"><span class="bullet">2. </span>临时修改隔离级别</span><br><span class="line"><span class="code">		set session transaction isolation level 级别字符串;</span></span><br></pre></td></tr></table></figure>



<p>准备模拟二个事务窗口：A窗口、B窗口</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1. </span>演示脏读</span><br><span class="line"><span class="code">	设置数据库隔离级别 read uncommitted;</span></span><br><span class="line"><span class="code">		set session transaction isolation level read uncommitted;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/05/MySql-affair/1588574979356.png" alt="1588574979356"> </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">2. </span>解决脏读问题（引出：不可重复读问题）</span><br><span class="line"><span class="code">	设置数据库隔离级别 read committed;</span></span><br><span class="line"><span class="code">		set session transaction isolation level read committed;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/05/MySql-affair/1588575246485.png" alt="1588575246485"> </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">3. </span>解决不可重复读问题（出现幻读问题）</span><br><span class="line"><span class="code">	设置数据库隔离级别 repeatable read;</span></span><br><span class="line"><span class="code">		set session transaction isolation level repeatable read;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/05/MySql-affair/1588575464733.png" alt="1588575464733"> </p>
<p><img src="/2020/05/05/MySql-affair/1588575751527.png" alt="1588575751527"> </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">4. </span>解决幻读问题</span><br><span class="line"><span class="code">	设置数据库隔离级别 serializable;</span></span><br><span class="line"><span class="code">		set session transaction isolation level serializable;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2020/05/05/MySql-affair/1588575900641.png" alt="1588575900641"></p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql函数</title>
    <url>/2020/05/05/MySql-function/</url>
    <content><![CDATA[<h2 id="一、数学函数"><a href="#一、数学函数" class="headerlink" title="一、数学函数"></a>一、数学函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">ABS(x)   返回x的绝对值</span><br><span class="line"></span><br><span class="line">BIN(x)   返回x的二进制（OCT返回八进制，HEX返回十六进制）</span><br><span class="line"></span><br><span class="line">CEILING(x)   返回大于x的最小整数值</span><br><span class="line"></span><br><span class="line">EXP(x)   返回值e（自然对数的底）的x次方</span><br><span class="line"></span><br><span class="line">FLOOR(x)   返回小于x的最大整数值</span><br><span class="line"></span><br><span class="line">GREATEST(x1,x2,...,xn)返回集合中最大的值</span><br><span class="line"></span><br><span class="line">LEAST(x1,x2,...,xn)      返回集合中最小的值</span><br><span class="line"></span><br><span class="line">LN(x)                    返回x的自然对数</span><br><span class="line"></span><br><span class="line">LOG(x,y)返回x的以y为底的对数</span><br><span class="line"></span><br><span class="line">MOD(x,y)                 返回x/y的模（余数）</span><br><span class="line"></span><br><span class="line">PI()返回pi的值（圆周率）</span><br><span class="line"></span><br><span class="line">RAND()返回０到１内的随机值,可以通过提供一个参数(种子)使RAND()随机数生成器生成一个指定的值。</span><br><span class="line"></span><br><span class="line">ROUND(x,y)返回参数x的四舍五入的有y位小数的值</span><br><span class="line"></span><br><span class="line">SIGN(x) 返回代表数字x的符号的值</span><br><span class="line"></span><br><span class="line">SQRT(x) 返回一个数的平方根</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRUNCATE</span>(x,y)            返回数字x截短为y位小数的结果</span><br></pre></td></tr></table></figure>



<h2 id="二、聚合函数"><a href="#二、聚合函数" class="headerlink" title="二、聚合函数"></a>二、聚合函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">AVG(col)返回指定列的平均值</span><br><span class="line"></span><br><span class="line">COUNT(col)返回指定列中非NULL值的个数</span><br><span class="line"></span><br><span class="line">MIN(col)返回指定列的最小值</span><br><span class="line"></span><br><span class="line">MAX(col)返回指定列的最大值</span><br><span class="line"></span><br><span class="line">SUM(col)返回指定列的所有值之和</span><br><span class="line"></span><br><span class="line">GROUP_CONCAT(col) 返回由属于一组的列值连接组合而成的结果</span><br></pre></td></tr></table></figure>



<h2 id="三、字符串函数"><a href="#三、字符串函数" class="headerlink" title="三、字符串函数"></a>三、字符串函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">ASCII(char)返回字符的ASCII码值</span><br><span class="line"></span><br><span class="line">BIT_LENGTH(str)返回字符串的比特长度</span><br><span class="line"></span><br><span class="line">CONCAT(s1,s2...,sn)将s1,s2...,sn连接成字符串</span><br><span class="line"></span><br><span class="line">CONCAT_WS(sep,s1,s2...,sn)将s1,s2...,sn连接成字符串，并用sep字符间隔</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span>(<span class="keyword">str</span>,x,y,<span class="keyword">instr</span>) 将字符串<span class="keyword">str</span>从第x位置开始，y个字符长的子串替换为字符串<span class="keyword">instr</span>，返回结果</span><br><span class="line"></span><br><span class="line">FIND_IN_SET(<span class="keyword">str</span>,<span class="keyword">list</span>)分析逗号分隔的<span class="keyword">list</span>列表，如果发现<span class="keyword">str</span>，返回<span class="keyword">str</span>在<span class="keyword">list</span>中的位置</span><br><span class="line"></span><br><span class="line"><span class="keyword">LCASE</span>(<span class="keyword">str</span>)或<span class="keyword">LOWER</span>(<span class="keyword">str</span>) 返回将字符串<span class="keyword">str</span>中所有字符改变为小写后的结果</span><br><span class="line"></span><br><span class="line"><span class="keyword">LEFT</span>(<span class="keyword">str</span>,x)返回字符串<span class="keyword">str</span>中最左边的x个字符</span><br><span class="line"></span><br><span class="line"><span class="keyword">LENGTH</span>(s)返回字符串<span class="keyword">str</span>中的字符数</span><br><span class="line"></span><br><span class="line"><span class="keyword">LTRIM</span>(<span class="keyword">str</span>) 从字符串<span class="keyword">str</span>中切掉开头的空格</span><br><span class="line"></span><br><span class="line"><span class="keyword">POSITION</span>(<span class="keyword">substr</span>,<span class="keyword">str</span>) 返回子串<span class="keyword">substr</span>在字符串<span class="keyword">str</span>中第一次出现的位置</span><br><span class="line"></span><br><span class="line">QUOTE(<span class="keyword">str</span>) 用反斜杠转义<span class="keyword">str</span>中的单引号</span><br><span class="line"></span><br><span class="line"><span class="keyword">REPEAT</span>(<span class="keyword">str</span>,srchstr,rplcstr)返回字符串<span class="keyword">str</span>重复x次的结果</span><br><span class="line"></span><br><span class="line"><span class="keyword">REVERSE</span>(<span class="keyword">str</span>) 返回颠倒字符串<span class="keyword">str</span>的结果</span><br><span class="line"></span><br><span class="line"><span class="keyword">RIGHT</span>(<span class="keyword">str</span>,x) 返回字符串<span class="keyword">str</span>中最右边的x个字符</span><br><span class="line"></span><br><span class="line"><span class="keyword">RTRIM</span>(<span class="keyword">str</span>) 返回字符串<span class="keyword">str</span>尾部的空格</span><br><span class="line"></span><br><span class="line"><span class="keyword">STRCMP</span>(s1,s2)比较字符串s1和s2</span><br><span class="line"></span><br><span class="line"><span class="keyword">TRIM</span>(<span class="keyword">str</span>)去除字符串首部和尾部的所有空格</span><br><span class="line"></span><br><span class="line"><span class="keyword">UCASE</span>(<span class="keyword">str</span>)或<span class="keyword">UPPER</span>(<span class="keyword">str</span>) 返回将字符串<span class="keyword">str</span>中所有字符转变为大写后的结果</span><br></pre></td></tr></table></figure>



<h2 id="四、日期和时间函数"><a href="#四、日期和时间函数" class="headerlink" title="四、日期和时间函数"></a>四、日期和时间函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CURDATE()或CURRENT_DATE() 返回当前的日期</span><br><span class="line"></span><br><span class="line">CURTIME()或CURRENT_TIME() 返回当前的时间</span><br><span class="line"></span><br><span class="line">DATE_ADD(date,INTERVAL int keyword)返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH);</span><br><span class="line"></span><br><span class="line">DATE_FORMAT(date,fmt)  依照指定的fmt格式格式化日期date值</span><br><span class="line"></span><br><span class="line">DATE_SUB(date,INTERVAL int keyword)返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化),如：SELECTDATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH);</span><br><span class="line"></span><br><span class="line">DAYOFWEEK(date)   返回date所代表的一星期中的第几天(1~7)</span><br><span class="line"></span><br><span class="line">DAYOFMONTH(date)  返回date是一个月的第几天(1~31)</span><br><span class="line"></span><br><span class="line">DAYOFYEAR(date)   返回date是一年的第几天(1~366)</span><br><span class="line"></span><br><span class="line">DAYNAME(date)   返回date的星期名，如：<span class="keyword">SELECT</span> <span class="keyword">DAYNAME</span>(<span class="keyword">CURRENT_DATE</span>);</span><br><span class="line"></span><br><span class="line">FROM_UNIXTIME(ts,fmt)  根据指定的fmt格式，格式化UNIX时间戳ts</span><br><span class="line"></span><br><span class="line">HOUR(time)   返回time的小时值(0~23)</span><br><span class="line"></span><br><span class="line">MINUTE(time)   返回time的分钟值(0~59)</span><br><span class="line"></span><br><span class="line">MONTH(date)   返回date的月份值(1~12)</span><br><span class="line"></span><br><span class="line">MONTHNAME(date)   返回date的月份名，如：<span class="keyword">SELECT</span> MONTHNAME(<span class="keyword">CURRENT_DATE</span>);</span><br><span class="line"></span><br><span class="line">NOW()    返回当前的日期和时间</span><br><span class="line"></span><br><span class="line">QUARTER(date)   返回date在一年中的季度(1~4)，如<span class="keyword">SELECT</span> <span class="keyword">QUARTER</span>(<span class="keyword">CURRENT_DATE</span>);</span><br><span class="line"></span><br><span class="line">WEEK(date)   返回日期date为一年中第几周(0~53)</span><br><span class="line"></span><br><span class="line">YEAR(date)   返回日期date的年份(1000~9999)</span><br><span class="line"></span><br><span class="line">一些示例：</span><br><span class="line"></span><br><span class="line">获取当前系统时间：<span class="keyword">SELECT</span> FROM_UNIXTIME(<span class="keyword">UNIX_TIMESTAMP</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">EXTRACT</span>(YEAR_MONTH <span class="keyword">FROM</span> <span class="keyword">CURRENT_DATE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">EXTRACT</span>(DAY_SECOND <span class="keyword">FROM</span> <span class="keyword">CURRENT_DATE</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">EXTRACT</span>(HOUR_MINUTE <span class="keyword">FROM</span> <span class="keyword">CURRENT_DATE</span>);</span><br><span class="line"></span><br><span class="line">返回两个日期值之间的差值(月数)：<span class="keyword">SELECT</span> <span class="keyword">PERIOD_DIFF</span>(<span class="number">200302</span>,<span class="number">199802</span>);</span><br><span class="line"></span><br><span class="line">在Mysql中计算年龄：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">FROM_DAYS</span>(<span class="keyword">TO_DAYS</span>(<span class="keyword">NOW</span>())-<span class="keyword">TO_DAYS</span>(birthday)),<span class="string">'%Y'</span>)+<span class="number">0</span> <span class="keyword">AS</span> age <span class="keyword">FROM</span> employee;</span><br><span class="line"></span><br><span class="line">这样，如果Brithday是未来的年月日的话，计算结果为0。</span><br><span class="line"></span><br><span class="line">下面的SQL语句计算员工的绝对年龄，即当Birthday是未来的日期时，将得到负值。</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(), <span class="string">'%Y'</span>) - <span class="keyword">DATE_FORMAT</span>(birthday, <span class="string">'%Y'</span>) -(<span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(), <span class="string">'00-%m-%d'</span>) &lt;<span class="keyword">DATE_FORMAT</span>(birthday, <span class="string">'00-%m-%d'</span>)) <span class="keyword">AS</span> age <span class="keyword">from</span> employee</span><br></pre></td></tr></table></figure>

<p><strong>DATE_FORMAT可以使用的格式有：</strong></p>
<table>
<thead>
<tr>
<th align="left">格式</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">%a</td>
<td align="left">缩写星期名</td>
</tr>
<tr>
<td align="left">%b</td>
<td align="left">缩写月名</td>
</tr>
<tr>
<td align="left">%c</td>
<td align="left">月，数值</td>
</tr>
<tr>
<td align="left">%D</td>
<td align="left">带有英文前缀的月中的天</td>
</tr>
<tr>
<td align="left">%d</td>
<td align="left">月的天，数值(00-31)</td>
</tr>
<tr>
<td align="left">%e</td>
<td align="left">月的天，数值(0-31)</td>
</tr>
<tr>
<td align="left">%f</td>
<td align="left">微秒</td>
</tr>
<tr>
<td align="left">%H</td>
<td align="left">小时 (00-23)</td>
</tr>
<tr>
<td align="left">%h</td>
<td align="left">小时 (01-12)</td>
</tr>
<tr>
<td align="left">%I</td>
<td align="left">小时 (01-12)</td>
</tr>
<tr>
<td align="left">%i</td>
<td align="left">分钟，数值(00-59)</td>
</tr>
<tr>
<td align="left">%j</td>
<td align="left">年的天 (001-366)</td>
</tr>
<tr>
<td align="left">%k</td>
<td align="left">小时 (0-23)</td>
</tr>
<tr>
<td align="left">%l</td>
<td align="left">小时 (1-12)</td>
</tr>
<tr>
<td align="left">%M</td>
<td align="left">月名</td>
</tr>
<tr>
<td align="left">%m</td>
<td align="left">月，数值(00-12)</td>
</tr>
<tr>
<td align="left">%p</td>
<td align="left">AM 或 PM</td>
</tr>
<tr>
<td align="left">%r</td>
<td align="left">时间，12-小时（hh:mm:ss AM 或 PM）</td>
</tr>
<tr>
<td align="left">%S</td>
<td align="left">秒(00-59)</td>
</tr>
<tr>
<td align="left">%s</td>
<td align="left">秒(00-59)</td>
</tr>
<tr>
<td align="left">%T</td>
<td align="left">时间, 24-小时 (hh:mm:ss)</td>
</tr>
<tr>
<td align="left">%U</td>
<td align="left">周 (00-53) 星期日是一周的第一天</td>
</tr>
<tr>
<td align="left">%u</td>
<td align="left">周 (00-53) 星期一是一周的第一天</td>
</tr>
<tr>
<td align="left">%V</td>
<td align="left">周 (01-53) 星期日是一周的第一天，与 %X 使用</td>
</tr>
<tr>
<td align="left">%v</td>
<td align="left">周 (01-53) 星期一是一周的第一天，与 %x 使用</td>
</tr>
<tr>
<td align="left">%W</td>
<td align="left">星期名</td>
</tr>
<tr>
<td align="left">%w</td>
<td align="left">周的天 （0=星期日, 6=星期六）</td>
</tr>
<tr>
<td align="left">%X</td>
<td align="left">年，其中的星期日是周的第一天，4 位，与 %V 使用</td>
</tr>
<tr>
<td align="left">%x</td>
<td align="left">年，其中的星期一是周的第一天，4 位，与 %v 使用</td>
</tr>
<tr>
<td align="left">%Y</td>
<td align="left">年，4 位</td>
</tr>
<tr>
<td align="left">%y</td>
<td align="left">年，2 位</td>
</tr>
</tbody></table>
<h2 id="五、加密函数"><a href="#五、加密函数" class="headerlink" title="五、加密函数"></a>五、加密函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">AES_ENCRYPT(str,key)  返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储</span><br><span class="line"></span><br><span class="line">AES_DECRYPT(str,key)  返回用密钥key对字符串str利用高级加密标准算法解密后的结果</span><br><span class="line"></span><br><span class="line">DECODE(str,key)   使用key作为密钥解密加密字符串str</span><br><span class="line"></span><br><span class="line">ENCRYPT(str,salt)   使用UNIXcrypt()函数，用关键词salt(一个可以惟一确定口令的字符串，就像钥匙一样)加密字符串str</span><br><span class="line"></span><br><span class="line">ENCODE(str,key)   使用key作为密钥加密字符串str，调用ENCODE()的结果是一个二进制字符串，它以BLOB类型存储</span><br><span class="line"></span><br><span class="line">MD5()    计算字符串str的MD5校验和</span><br><span class="line"></span><br><span class="line">PASSWORD(str)   返回字符串str的加密版本，这个加密过程是不可逆转的，和UNIX密码加密过程使用不同的算法。</span><br><span class="line"></span><br><span class="line">SHA()    计算字符串str的安全散列算法(SHA)校验和</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ENCRYPT</span>(<span class="string">'root'</span>,<span class="string">'salt'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ENCODE</span>(<span class="string">'xufeng'</span>,<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DECODE</span>(<span class="keyword">ENCODE</span>(<span class="string">'xufeng'</span>,<span class="string">'key'</span>),<span class="string">'key'</span>);<span class="comment">#加解密放在一起</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AES_ENCRYPT</span>(<span class="string">'root'</span>,<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AES_DECRYPT</span>(<span class="keyword">AES_ENCRYPT</span>(<span class="string">'root'</span>,<span class="string">'key'</span>),<span class="string">'key'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MD5</span>(<span class="string">'123456'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SHA</span>(<span class="string">'123456'</span>);</span><br></pre></td></tr></table></figure>



<h2 id="六、控制流函数"><a href="#六、控制流函数" class="headerlink" title="六、控制流函数"></a>六、控制流函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL有4个函数是用来进行条件操作的，这些函数可以实现SQL的条件逻辑，允许开发者将一些应用程序业务逻辑转换到数据库后台。</span><br><span class="line"></span><br><span class="line">MySQL控制流函数：</span><br><span class="line"></span><br><span class="line">CASE WHEN[test1] THEN [result1]...ELSE [default] <span class="keyword">END</span>如果testN是真，则返回resultN，否则返回<span class="keyword">default</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CASE</span> [<span class="keyword">test</span>] <span class="keyword">WHEN</span>[val1] <span class="keyword">THEN</span> [<span class="keyword">result</span>]...ELSE [<span class="keyword">default</span>]<span class="keyword">END</span>  如果<span class="keyword">test</span>和valN相等，则返回resultN，否则返回<span class="keyword">default</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span>(<span class="keyword">test</span>,t,f)   如果<span class="keyword">test</span>是真，返回t；否则返回f</span><br><span class="line"></span><br><span class="line"><span class="keyword">IFNULL</span>(arg1,arg2) 如果arg1不是空，返回arg1，否则返回arg2</span><br><span class="line"></span><br><span class="line"><span class="keyword">NULLIF</span>(arg1,arg2) 如果arg1=arg2返回<span class="literal">NULL</span>；否则返回arg1</span><br><span class="line"></span><br><span class="line">这些函数的第一个是<span class="keyword">IFNULL</span>()，它有两个参数，并且对第一个参数进行判断。如果第一个参数不是<span class="literal">NULL</span>，函数就会向调用者返回第一个参数；如果是<span class="literal">NULL</span>,将返回第二个参数。</span><br><span class="line"></span><br><span class="line">如：<span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(<span class="number">1</span>,<span class="number">2</span>), <span class="keyword">IFNULL</span>(<span class="literal">NULL</span>,<span class="number">10</span>),<span class="keyword">IFNULL</span>(<span class="number">4</span>*<span class="literal">NULL</span>,<span class="string">'false'</span>);</span><br><span class="line"></span><br><span class="line">NULLIF()函数将会检验提供的两个参数是否相等，如果相等，则返回NULL，如果不相等，就返回第一个参数。</span><br><span class="line"></span><br><span class="line">如：<span class="keyword">SELECT</span> <span class="keyword">NULLIF</span>(<span class="number">1</span>,<span class="number">1</span>),<span class="keyword">NULLIF</span>(<span class="string">'A'</span>,<span class="string">'B'</span>),<span class="keyword">NULLIF</span>(<span class="number">2</span>+<span class="number">3</span>,<span class="number">4</span>+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">和许多脚本语言提供的IF()函数一样，MySQL的IF()函数也可以建立一个简单的条件测试，这个函数有三个参数，第一个是要被判断的表达式，如果表达式为真，IF()将会返回第二个参数，如果为假，IF()将会返回第三个参数。</span><br><span class="line"></span><br><span class="line">如：SELECTIF(1&lt;10,2,3),IF(56&gt;100,'true','false');</span><br><span class="line"></span><br><span class="line">IF()函数在只有两种可能结果时才适合使用。然而，在现实世界中，我们可能发现在条件测试中会需要多个分支。在这种情况下，MySQL提供了CASE函数，它和PHP及Perl语言的switch-case条件例程一样。</span><br><span class="line"></span><br><span class="line">CASE函数的格式有些复杂，通常如下所示：</span><br><span class="line"></span><br><span class="line">CASE [expression to be evaluated]</span><br><span class="line"></span><br><span class="line">WHEN [val 1] THEN [result 1]</span><br><span class="line"></span><br><span class="line">WHEN [val 2] THEN [result 2]</span><br><span class="line"></span><br><span class="line">WHEN [val 3] THEN [result 3]</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">WHEN [val n] THEN [result n]</span><br><span class="line"></span><br><span class="line">ELSE [default result]</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line">这里，第一个参数是要被判断的值或表达式，接下来的是一系列的<span class="keyword">WHEN</span>-<span class="keyword">THEN</span>块，每一块的第一个参数指定要比较的值，如果为真，就返回结果。所有的<span class="keyword">WHEN</span>-<span class="keyword">THEN</span>块将以<span class="keyword">ELSE</span>块结束，当<span class="keyword">END</span>结束了所有外部的<span class="keyword">CASE</span>块时，如果前面的每一个块都不匹配就会返回<span class="keyword">ELSE</span>块指定的默认结果。如果没有指定<span class="keyword">ELSE</span>块，而且所有的<span class="keyword">WHEN</span>-<span class="keyword">THEN</span>比较都不是真，MySQL将会返回<span class="literal">NULL</span>。</span><br><span class="line"></span><br><span class="line"><span class="keyword">CASE</span>函数还有另外一种句法，有时使用起来非常方便，如下：</span><br><span class="line"></span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHEN</span> [conditional <span class="keyword">test</span> <span class="number">1</span>] <span class="keyword">THEN</span> [<span class="keyword">result</span> <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHEN</span> [conditional <span class="keyword">test</span> <span class="number">2</span>] <span class="keyword">THEN</span> [<span class="keyword">result</span> <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">ELSE</span> [<span class="keyword">default</span> <span class="keyword">result</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line">这种条件下，返回的结果取决于相应的条件测试是否为真。</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line">mysql&gt;<span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="string">'green'</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">WHEN</span> <span class="string">'red'</span> <span class="keyword">THEN</span> <span class="string">'stop'</span></span><br><span class="line"></span><br><span class="line">     <span class="keyword">WHEN</span> <span class="string">'green'</span> <span class="keyword">THEN</span> <span class="string">'go'</span> <span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="number">9</span> <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">'a'</span> <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="string">'b'</span> <span class="keyword">ELSE</span> <span class="string">'N/A'</span> <span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> (<span class="number">2</span>+<span class="number">2</span>)=<span class="number">4</span> <span class="keyword">THEN</span> <span class="string">'OK'</span> <span class="keyword">WHEN</span>(<span class="number">2</span>+<span class="number">2</span>)&lt;&gt;<span class="number">4</span> <span class="keyword">THEN</span> <span class="string">'not OK'</span> <span class="keyword">END</span> ASSTATUS;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Name</span>,<span class="keyword">IF</span>((IsActive = <span class="number">1</span>),<span class="string">'已激活'</span>,<span class="string">'未激活'</span>) <span class="keyword">AS</span> <span class="keyword">RESULT</span> FROMUserLoginInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> fname,lname,(math+sci+lit) <span class="keyword">AS</span> total,</span><br><span class="line"></span><br><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> (math+sci+lit) &lt; <span class="number">50</span> <span class="keyword">THEN</span> <span class="string">'D'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHEN</span> (math+sci+lit) <span class="keyword">BETWEEN</span> <span class="number">50</span> <span class="keyword">AND</span> <span class="number">150</span> <span class="keyword">THEN</span> <span class="string">'C'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WHEN</span> (math+sci+lit) <span class="keyword">BETWEEN</span> <span class="number">151</span> <span class="keyword">AND</span> <span class="number">250</span> <span class="keyword">THEN</span> <span class="string">'B'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">'A'</span> <span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">AS</span> grade <span class="keyword">FROM</span> marks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IF</span>(<span class="keyword">ENCRYPT</span>(<span class="string">'sue'</span>,<span class="string">'ts'</span>)=upass,<span class="string">'allow'</span>,<span class="string">'deny'</span>) <span class="keyword">AS</span> LoginResultFROM <span class="keyword">users</span> <span class="keyword">WHERE</span> uname = <span class="string">'sue'</span>;<span class="comment">#一个登陆验证</span></span><br></pre></td></tr></table></figure>



<h2 id="七、格式化函数"><a href="#七、格式化函数" class="headerlink" title="七、格式化函数"></a>七、格式化函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DATE_FORMAT(date,fmt)  依照字符串fmt格式化日期date值</span><br><span class="line"></span><br><span class="line">FORMAT(x,y)   把x格式化为以逗号隔开的数字序列，y是结果的小数位数</span><br><span class="line"></span><br><span class="line">INET_ATON(ip)   返回IP地址的数字表示</span><br><span class="line"></span><br><span class="line">INET_NTOA(num)   返回数字所代表的IP地址</span><br><span class="line"></span><br><span class="line">TIME_FORMAT(time,fmt)  依照字符串fmt格式化时间time值</span><br><span class="line"></span><br><span class="line">其中最简单的是FORMAT()函数，它可以把大的数值格式化为以逗号间隔的易读的序列。</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FORMAT</span>(<span class="number">34234.34323432</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(),<span class="string">'%W,%D %M %Y %r'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(),<span class="string">'%Y-%m-%d'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="number">19990330</span>,<span class="string">'%Y-%m-%d'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(),<span class="string">'%h:%i %p'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INET_ATON</span>(<span class="string">'10.122.89.47'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INET_NTOA</span>(<span class="number">175790383</span>);</span><br></pre></td></tr></table></figure>



<h2 id="八、类型转化函数"><a href="#八、类型转化函数" class="headerlink" title="八、类型转化函数"></a>八、类型转化函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">为了进行数据类型转化，MySQL提供了CAST()函数，它可以把一个值转化为指定的数据类型。类型有：BINARY,CHAR,DATE,TIME,DATETIME,SIGNED,UNSIGNED</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CAST</span>(<span class="keyword">NOW</span>() <span class="keyword">AS</span> SIGNED <span class="built_in">INTEGER</span>),<span class="keyword">CURDATE</span>()+<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">'f'</span>=<span class="built_in">BINARY</span> <span class="string">'F'</span>,<span class="string">'f'</span>=<span class="keyword">CAST</span>(<span class="string">'F'</span> <span class="keyword">AS</span> <span class="built_in">BINARY</span>);</span><br></pre></td></tr></table></figure>



<h2 id="九、系统信息函数"><a href="#九、系统信息函数" class="headerlink" title="九、系统信息函数"></a>九、系统信息函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DATABASE()   返回当前数据库名</span><br><span class="line"></span><br><span class="line">BENCHMARK(count,expr)  将表达式expr重复运行count次</span><br><span class="line"></span><br><span class="line">CONNECTION_ID()   返回当前客户的连接ID</span><br><span class="line"></span><br><span class="line">FOUND_ROWS()   返回最后一个<span class="keyword">SELECT</span>查询进行检索的总行数</span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span>()或<span class="keyword">SYSTEM_USER</span>()  返回当前登陆用户名</span><br><span class="line"></span><br><span class="line"><span class="keyword">VERSION</span>()   返回MySQL服务器的版本</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>(),<span class="keyword">VERSION</span>(),<span class="keyword">USER</span>();</span><br><span class="line"></span><br><span class="line">SELECTBENCHMARK(9999999,LOG(RAND()PI()));<span class="comment">#该例中,MySQL计算LOG(RAND()PI())表达式9999999次。</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql函数</tag>
      </tags>
  </entry>
</search>
